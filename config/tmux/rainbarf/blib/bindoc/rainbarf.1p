.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RAINBARF 1p"
.TH RAINBARF 1p "2024-05-06" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
rainbarf \- CPU/RAM/battery stats chart bar for tmux (and GNU screen)
.SH "VERSION"
.IX Header "VERSION"
version 1.4
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& rainbarf \-\-tmux \-\-width 40 \-\-no\-battery
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Fancy resource usage charts to put into the tmux <http://tmux.sourceforge.net/> status line.
The \s-1CPU\s0 utilization history chart is tinted with the following colors to reflect the system memory allocation:
.IP "\(bu" 4
\&\fBgreen\fR: free memory;
.IP "\(bu" 4
\&\fByellow\fR: active memory;
.IP "\(bu" 4
\&\fBblue\fR: inactive memory;
.IP "\(bu" 4
\&\fBred\fR: wired memory on \fIMac \s-1OS X\s0\fR / \fIFreeBSD\fR; \*(L"unaccounted\*(R" memory on \fILinux\fR;
.IP "\(bu" 4
\&\fBcyan\fR: cached memory on \fILinux\fR, buf on \fIFreeBSD\fR.
.IP "\(bu" 4
\&\fBmagenta\fR: used swap memory.
.PP
If available, battery charge is displayed on the right.
.PP
Just go to <https://github.com/creaktive/rainbarf> to see some screenshots.
.SH "USAGE"
.IX Header "USAGE"
.SS "Installation"
.IX Subsection "Installation"
.IP "\(bu" 4
Traditional way:
.Sp
.Vb 3
\& perl Build.PL
\& ./Build test
\& ./Build install
.Ve
.IP "\(bu" 4
Homebrew <http://brew.sh/> way:
.Sp
.Vb 1
\& brew install rainbarf
.Ve
.IP "\(bu" 4
MacPorts <http://www.macports.org/> way:
.Sp
.Vb 1
\& port install rainbarf
.Ve
.IP "\(bu" 4
\&\s-1CPAN\s0 way:
.Sp
.Vb 1
\& cpan \-i App::rainbarf
.Ve
.IP "\(bu" 4
Modern Perl way:
.Sp
.Vb 1
\& cpanm git://github.com/creaktive/rainbarf.git
.Ve
.SS "Configuration"
.IX Subsection "Configuration"
Add the following line to your \fI~/.tmux.conf\fR file:
.PP
.Vb 2
\& set\-option \-g status\-utf8 on
\& set \-g status\-right \*(Aq#(rainbarf)\*(Aq
.Ve
.PP
Or, under \fI\s-1GNOME\s0 Terminal\fR:
.PP
.Vb 2
\& set\-option \-g status\-utf8 on
\& set \-g status\-right \*(Aq#(rainbarf \-\-rgb)\*(Aq
.Ve
.PP
Reload the tmux config by running \f(CW\*(C`tmux source\-file ~/.tmux.conf\*(C'\fR.
.SH "CONFIGURATION FILE"
.IX Header "CONFIGURATION FILE"
\&\f(CW\*(C`~/.rainbarf.conf\*(C'\fR can be used to persistently store \*(L"\s-1OPTIONS\*(R"\s0:
.PP
.Vb 5
\& # example configuration file
\& width=20   # widget width
\& bolt       # fancy charging character
\& remaining  # display remaining battery
\& rgb        # 256\-colored palette
.Ve
.PP
\&\*(L"\s-1OPTIONS\*(R"\s0 specified via command line override that values.
Configuration file can be specified via \f(CW\*(C`RAINBARF\*(C'\fR environment variable:
.PP
.Vb 1
\& RAINBARF=~/.rainbarf.conf rainbarf
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.ie n .IP """\-\-help""" 4
.el .IP "\f(CW\-\-help\fR" 4
.IX Item "--help"
This.
.ie n .IP """\-\-[no]battery""" 4
.el .IP "\f(CW\-\-[no]battery\fR" 4
.IX Item "--[no]battery"
Display the battery charge indicator.
Enabled by default.
.ie n .IP """\-\-[no]remaining""" 4
.el .IP "\f(CW\-\-[no]remaining\fR" 4
.IX Item "--[no]remaining"
Display the time remaining until the battery is fully charged/empty. See \*(L"\s-1CAVEAT\*(R"\s0.
Disabled by default.
.ie n .IP """\-\-[no]bolt""" 4
.el .IP "\f(CW\-\-[no]bolt\fR" 4
.IX Item "--[no]bolt"
Display even fancier battery indicator.
Disabled by default.
.ie n .IP """\-\-[no]bright""" 4
.el .IP "\f(CW\-\-[no]bright\fR" 4
.IX Item "--[no]bright"
Tricky one. Disabled by default. See \*(L"\s-1CAVEAT\*(R"\s0.
.ie n .IP """\-\-[no]rgb""" 4
.el .IP "\f(CW\-\-[no]rgb\fR" 4
.IX Item "--[no]rgb"
Use the \fB\s-1RGB\s0\fR palette instead of the system colors.
Also disabled by default, for the same reasons as above.
.ie n .IP """\-\-fg COLOR_NAME""" 4
.el .IP "\f(CW\-\-fg COLOR_NAME\fR" 4
.IX Item "--fg COLOR_NAME"
Force chart foreground color.
.ie n .IP """\-\-bg COLOR_NAME""" 4
.el .IP "\f(CW\-\-bg COLOR_NAME\fR" 4
.IX Item "--bg COLOR_NAME"
Force chart background color.
.ie n .IP """\-\-[no]loadavg""" 4
.el .IP "\f(CW\-\-[no]loadavg\fR" 4
.IX Item "--[no]loadavg"
Use load average <https://en.wikipedia.org/wiki/Load_(computing)> metric instead of \s-1CPU\s0 utilization.
You might want to set the \f(CW\*(C`\-\-max\*(C'\fR threshold since this is an absolute value and has varying ranges on different systems.
Disabled by default.
.ie n .IP """\-\-[no]swap""" 4
.el .IP "\f(CW\-\-[no]swap\fR" 4
.IX Item "--[no]swap"
Display the swap usage.
Used swap amount is added to the total amount, but the free swap amount is not!
Disabled by default.
.ie n .IP """\-\-max NUMBER""" 4
.el .IP "\f(CW\-\-max NUMBER\fR" 4
.IX Item "--max NUMBER"
Maximum \f(CW\*(C`loadavg\*(C'\fR you expect before rescaling the chart. Default is 1.
.ie n .IP """\-\-order INDEXES""" 4
.el .IP "\f(CW\-\-order INDEXES\fR" 4
.IX Item "--order INDEXES"
Specify the memory usage bar order.
The default is \f(CW\*(C`fwaic\*(C'\fR ( \fBf\fRree, \fBw\fRired, \fBa\fRctive, \fBi\fRnactive & \fBc\fRached ).
.ie n .IP """\-\-[no]tmux""" 4
.el .IP "\f(CW\-\-[no]tmux\fR" 4
.IX Item "--[no]tmux"
Force \f(CW\*(C`tmux\*(C'\fR colors mode.
By default, rainbarf detects automatically if it is being called from \f(CW\*(C`tmux\*(C'\fR or from the interactive shell.
.ie n .IP """\-\-screen""" 4
.el .IP "\f(CW\-\-screen\fR" 4
.IX Item "--screen"
\&\fBscreen\fR\|(1) <http://manpages.ubuntu.com/manpages/hardy/man1/screen.1.html> colors mode. \fBExperimental\fR. See \*(L"\s-1CAVEAT\*(R"\s0.
.ie n .IP """\-\-width NUMBER""" 4
.el .IP "\f(CW\-\-width NUMBER\fR" 4
.IX Item "--width NUMBER"
Chart width. Default is 38, so both the chart and the battery indicator fit the \f(CW\*(C`tmux\*(C'\fR status line.
Higher values may require disabling the battery indicator or raising the \f(CW\*(C`status\-right\-length\*(C'\fR value in \fI~/.tmux.conf\fR.
.ie n .IP """\-\-datfile FILENAME""" 4
.el .IP "\f(CW\-\-datfile FILENAME\fR" 4
.IX Item "--datfile FILENAME"
Specify the file to log \s-1CPU\s0 stats to.
Default: \fI\f(CI$HOME\fI/.rainbarf.dat\fR
.ie n .IP """\-\-skip NUMBER""" 4
.el .IP "\f(CW\-\-skip NUMBER\fR" 4
.IX Item "--skip NUMBER"
Do not write \s-1CPU\s0 stats if file already exists and is newer than this many seconds.
Useful if you refresh \f(CW\*(C`tmux\*(C'\fR status quite frequently.
.SH "CAVEAT"
.IX Header "CAVEAT"
.SS "Time remaining"
.IX Subsection "Time remaining"
If the \f(CW\*(C`\-\-remaining\*(C'\fR option is present but you do not see the time in your status bar, you may need to increase the value of \f(CW\*(C`status\-right\-length\*(C'\fR to 48.
.SS "Color scheme"
.IX Subsection "Color scheme"
If you only see the memory usage bars but no \s-1CPU\s0 utilization chart, that's because your terminal's color scheme need an explicit distinction between foreground and background colors.
For instance, \*(L"red on red background\*(R" will be displayed as a red block on such terminals.
Thus, you may need the \s-1ANSI\s0 \fBbright\fR attribute for greater contrast, or maybe consider switching to the 256\-color palette.
There are some issues with that, though:
.IP "1." 4
Other color schemes (notably, solarized <http://ethanschoonover.com/solarized>) have different meaning for the \s-1ANSI\s0 \fBbright\fR attribute.
So using it will result in a quite psychedelic appearance.
256\-color pallette, activated by the \f(CW\*(C`\-\-rgb\*(C'\fR flag, is unaffected by that.
.IP "2." 4
The older versions of Term::ANSIColor dependency do not recognize bright/RGB settings, falling back to the default behavior (plain 16 colors).
However, the whole Term::ANSIColor is optional, it is only required to preview the effects of the \*(L"\s-1OPTIONS\*(R"\s0 via command line before actually editing the \fI~/.tmux.conf\fR.
That is, \f(CW\*(C`rainbarf \-\-bright \-\-tmux\*(C'\fR \fBis guaranteed to work\fR despite the outdated Term::ANSIColor!
.PP
Another option is skipping the system colors altogether and use the \fB\s-1RGB\s0\fR palette (\f(CW\*(C`rainbarf \-\-rgb\*(C'\fR).
This fixes the \fIissue 1\fR, but doesn't affect the \fIissue 2\fR.
It still looks better, though.
.SS "Persistent storage"
.IX Subsection "Persistent storage"
\&\s-1CPU\s0 utilization stats are persistently stored in the \fI~/.rainbarf.dat\fR file.
Every rainbarf execution will update and rotate that file.
Since \f(CW\*(C`tmux\*(C'\fR calls rainbarf periodically (every 15 seconds, by default), the chart will display \s-1CPU\s0 utilization for the last ~9.5 minutes (15 * 38).
Thus, several \f(CW\*(C`tmux\*(C'\fR instances running simultaneously for the same user will result in a faster chart scrolling.
.SS "screen"
.IX Subsection "screen"
Stable \f(CW\*(C`screen\*(C'\fR version unfortunately has a broken \s-1UTF\-8\s0 handling specifically for the status bar.
Thus, I have only tested the rainbarf with the variant from <git://git.savannah.gnu.org/screen.git>.
My \fI~/.screenrc\fR contents:
.PP
.Vb 3
\& backtick 1 15 15 rainbarf \-\-bright \-\-screen
\& hardstatus string "%1\`"
\& hardstatus lastline
.Ve
.SH "REFERENCES"
.IX Header "REFERENCES"
.IP "\(bu" 4
\&\fBtop\fR\|(1) <http://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/top.1.html> is used to get the \s-1CPU/RAM\s0 stats if no \fI/proc\fR filesystem is available.
.IP "\(bu" 4
\&\fBioreg\fR\|(8) <http://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/ioreg.8.html> is used to get the battery status on \fIMac \s-1OS X\s0\fR.
.IP "\(bu" 4
\&\s-1ACPI\s0 <http://www.tldp.org/howto/acpi-howto/usingacpi.html> is used to get the battery status on \fILinux\fR.
.IP "\(bu" 4
Battery <https://github.com/Goles/Battery> was a source of inspiration.
.IP "\(bu" 4
Spark <http://zachholman.com/spark/> was another source of inspiration.
.SH "AUTHOR"
.IX Header "AUTHOR"
Stanislaw Pusep <stas@sysd.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Chris Knadler <https://github.com/cknadler>
.IP "\(bu" 4
cinaeco <https://github.com/cinaeco>
.IP "\(bu" 4
Clemens Hammacher <https://github.com/hammacher>
.IP "\(bu" 4
H.Merijn Brand <https://github.com/Tux>
.IP "\(bu" 4
Henrik Hodne <https://github.com/henrikhodne>
.IP "\(bu" 4
Joe Hassick <https://github.com/jh3>
.IP "\(bu" 4
Josh Matthews <https://github.com/jmatth>
.IP "\(bu" 4
Lars Engels <https://github.com/larsengels>
.IP "\(bu" 4
Sergey Romanov <https://github.com/sergeyromanov>
.IP "\(bu" 4
Tom Cammann <https://github.com/takac>
.IP "\(bu" 4
Tuomas Jormola <https://github.com/tjormola>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Stanislaw Pusep <stas@sysd.org>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
